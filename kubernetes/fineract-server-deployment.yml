apiVersion: v1
kind: Service
metadata:
  labels:
    app: fineract-server
    app.kubernetes.io/name: fineract-server
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: fineract-platform
  name: fineract-server
  namespace: fineract
spec:
  ports:
    - protocol: TCP
      port: 8443
      targetPort: 8443
      name: https
  selector:
    app: fineract-server
    tier: backend
  type: LoadBalancer   # âœ… External access enabled

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fineract-server
  namespace: fineract
  labels:
    app: fineract-server
    app.kubernetes.io/name: fineract-server
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: fineract-platform
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fineract-server
      tier: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: fineract-server
        tier: backend
        app.kubernetes.io/name: fineract-server
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: fineract-platform
    spec:
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.28
          command:
            - 'sh'
            - '-c'
            - |
              echo "Checking for MySQL server availability..."
              until nc -z fineractmysql.fineract.svc.cluster.local 3306; do
                echo "Waiting for MySQL server..."
                sleep 2
              done
              echo "MySQL server is ready!"
      containers:
        - name: fineract-server
          image: apache/fineract:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: "1000m"
              memory: "2Gi"
            requests:
              cpu: "500m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /fineract-provider/actuator/health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /fineract-provider/actuator/health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 10
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /fineract-provider/actuator/health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          env:
            - name: FINERACT_NODE_ID
              value: '1'
            - name: FINERACT_HIKARI_DRIVER_CLASS_NAME
              value: org.mariadb.jdbc.Driver
            - name: FINERACT_HIKARI_JDBC_URL
              value: jdbc:mariadb://fineractmysql.fineract.svc.cluster.local:3306/fineract_tenants?useSSL=false&allowPublicKeyRetrieval=true
            - name: FINERACT_HIKARI_USERNAME
              valueFrom:
                secretKeyRef:
                  name: fineract-tenants-db-secret
                  key: username
            - name: FINERACT_HIKARI_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fineract-tenants-db-secret
                  key: password
            - name: FINERACT_DEFAULT_TENANTDB_HOSTNAME
              value: fineractmysql.fineract.svc.cluster.local
            - name: FINERACT_DEFAULT_TENANTDB_PORT
              value: '3306'
            - name: FINERACT_DEFAULT_TENANTDB_UID
              valueFrom:
                secretKeyRef:
                  name: fineract-tenants-db-secret
                  key: username
            - name: FINERACT_DEFAULT_TENANTDB_PWD
              valueFrom:
                secretKeyRef:
                  name: fineract-tenants-db-secret
                  key: password
            - name: FINERACT_DEFAULT_TENANTDB_CONN_PARAMS
              value: 'useSSL=false&allowPublicKeyRetrieval=true'
            - name: JAVA_TOOL_OPTIONS
              value: '-Xmx1G -Xms512m -Djava.security.egd=file:/dev/./urandom -Dserver.port=8443'
            - name: SPRING_PROFILES_ACTIVE
              value: 'kubernetes'
            - name: MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED
              value: 'true'
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: 'health,info,metrics'
            - name: SERVER_SSL_ENABLED
              value: 'true'
            - name: SERVER_PORT
              value: '8443'
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      restartPolicy: Always

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fineract-server-hpa
  namespace: fineract
  labels:
    app: fineract-server
    app.kubernetes.io/name: fineract-server
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: fineract-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fineract-server
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 25
          periodSeconds: 60
