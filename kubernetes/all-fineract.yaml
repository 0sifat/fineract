# =========================================
# 1. Namespace
# =========================================
apiVersion: v1
kind: Namespace
metadata:
  name: fineract
  annotations:
    argocd.argoproj.io/sync-wave: "0"

---
# =========================================
# 2. Secret for MariaDB
# =========================================
apiVersion: v1
kind: Secret
metadata:
  name: fineract-tenants-db-secret
  namespace: fineract
  annotations:
    argocd.argoproj.io/sync-wave: "0"
type: Opaque
stringData:
  username: root
  password: rootpassword123   # <-- Change this

---
# =========================================
# 3. ConfigMap for MariaDB init SQL
# =========================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: fineractmysql-initdb
  namespace: fineract
  annotations:
    argocd.argoproj.io/sync-wave: "0"
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS `fineract_tenants`;
    CREATE DATABASE IF NOT EXISTS `fineract_default`;
    GRANT ALL ON *.* TO 'root'@'%';

---
# =========================================
# 4. MariaDB Deployment + Service
# =========================================
apiVersion: v1
kind: Service
metadata:
  name: fineractmysql
  namespace: fineract
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  selector:
    app: fineractmysql
    tier: backend
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fineractmysql
  namespace: fineract
  labels:
    app: fineractmysql
    tier: backend
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fineractmysql
      tier: backend
  template:
    metadata:
      labels:
        app: fineractmysql
        tier: backend
    spec:
      containers:
        - name: mysql
          image: mariadb:11.4
          env:
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fineract-tenants-db-secret
                  key: password
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d/
            - name: mysql-data
              mountPath: /var/lib/mysql/
      volumes:
        - name: init-sql
          configMap:
            name: fineractmysql-initdb
        - name: mysql-data
          persistentVolumeClaim:
            claimName: fineractmysql-pv-claim

---
# =========================================
# 5. Fineract Server Deployment + Service
# =========================================
apiVersion: v1
kind: Service
metadata:
  name: fineract-server
  namespace: fineract
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  selector:
    app: fineract-server
    tier: backend
  ports:
    - port: 8443
      targetPort: 8443
      protocol: TCP
      name: https
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fineract-server
  namespace: fineract
  labels:
    app: fineract-server
    tier: backend
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fineract-server
      tier: backend
  template:
    metadata:
      labels:
        app: fineract-server
        tier: backend
    spec:
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.28
          command:
            - 'sh'
            - '-c'
            - |
              echo "Waiting for MariaDB..."
              until nc -z fineractmysql.fineract.svc.cluster.local 3306; do
                echo "MariaDB not ready yet..."
                sleep 2
              done
              echo "MariaDB is ready!"
      containers:
        - name: fineract-server
          image: apache/fineract:latest
          env:
            - name: FINERACT_HIKARI_JDBC_URL
              value: jdbc:mariadb://fineractmysql.fineract.svc.cluster.local:3306/fineract_tenants?useSSL=false&allowPublicKeyRetrieval=true
            - name: FINERACT_HIKARI_USERNAME
              valueFrom:
                secretKeyRef:
                  name: fineract-tenants-db-secret
                  key: username
            - name: FINERACT_HIKARI_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fineract-tenants-db-secret
                  key: password
          ports:
            - containerPort: 8443
              name: https

---
# =========================================
# 6. Mifos Community Deployment + Service
# =========================================
apiVersion: v1
kind: Service
metadata:
  name: mifos-community
  namespace: fineract
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  selector:
    app: mifos-community
    tier: frontend
  ports:
    - port: 9090
      targetPort: 80
      protocol: TCP
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mifos-community
  namespace: fineract
  labels:
    app: mifos-community
    tier: frontend
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mifos-community
      tier: frontend
  template:
    metadata:
      labels:
        app: mifos-community
        tier: frontend
    spec:
      initContainers:
        - name: wait-for-fineract
          image: busybox:1.28
          command:
            - sh
            - -c
            - |
              echo "Waiting for Fineract Server..."
              until nc -z fineract-server.fineract.svc.cluster.local 8443; do
                echo "Fineract Server not ready..."
                sleep 2
              done
              echo "Fineract Server is ready!"
      containers:
        - name: mifos-community
          image: openmf/community-app:latest
          ports:
            - containerPort: 80

